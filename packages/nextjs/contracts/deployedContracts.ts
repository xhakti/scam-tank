/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    MultiBettingPool: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "poolUuid",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "address",
              name: "participant",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "currentTokenPrice",
              type: "uint256",
            },
          ],
          name: "ParticipantEntered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "uuid",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "rewardToken",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "entryAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "basePrice",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "upperCircuitLimit",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "lowerCircuitLimit",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "createdAtEpoch",
              type: "uint256",
            },
          ],
          name: "PoolCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "poolUuid",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "address[]",
              name: "recipients",
              type: "address[]",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          name: "PoolFundsWithdrawn",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_uuid",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_rewardTokenName",
              type: "string",
            },
            {
              internalType: "address",
              name: "_rewardToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_entryAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_basePrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_currentPriceOfToken",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_upperCircuitLimit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_lowerCircuitLimit",
              type: "uint256",
            },
          ],
          name: "createPool",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_poolUuid",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_currentTokenPrice",
              type: "uint256",
            },
          ],
          name: "enterPool",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllPoolUuids",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_uuid",
              type: "bytes32",
            },
          ],
          name: "getPool",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "uuid",
                  type: "bytes32",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "rewardTokenName",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "rewardToken",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "entryAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "basePrice",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currentPriceOfToken",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "upperCircuitLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lowerCircuitLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalPoolAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "createdAtEpoch",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "user",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "timestamp",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "currentTokenPriceAtEntry",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct MultiBettingPool.Participant[]",
                  name: "participants",
                  type: "tuple[]",
                },
                {
                  internalType: "bool",
                  name: "exists",
                  type: "bool",
                },
              ],
              internalType: "struct MultiBettingPool.PoolConfig",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_poolUuid",
              type: "bytes32",
            },
          ],
          name: "getPoolParticipants",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "user",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currentTokenPriceAtEntry",
                  type: "uint256",
                },
              ],
              internalType: "struct MultiBettingPool.Participant[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "poolUuids",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "pools",
          outputs: [
            {
              internalType: "bytes32",
              name: "uuid",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "rewardTokenName",
              type: "string",
            },
            {
              internalType: "address",
              name: "rewardToken",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "entryAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "basePrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "currentPriceOfToken",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "upperCircuitLimit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lowerCircuitLimit",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalPoolAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "createdAtEpoch",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_poolUuid",
              type: "bytes32",
            },
            {
              internalType: "address[]",
              name: "_recipients",
              type: "address[]",
            },
          ],
          name: "withdrawPoolFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
